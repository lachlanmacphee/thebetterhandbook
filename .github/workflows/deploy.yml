name: Deploy to VPS

on:
  push:
    branches: ["master"]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    environment: production
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha,format=long
            type=ref,event=branch
            type=ref,event=tag
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Copy docker-compose file to VPS
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          source: "docker-compose.yml"
          target: "~/thebetterhandbook"

      - name: Deploy to VPS
        uses: appleboy/ssh-action@v1.0.3
        env:
          GITHUB_SHA: ${{ github.sha }}
          REGISTRY: ${{ env.REGISTRY }}
          IMAGE_NAME: ${{ env.IMAGE_NAME }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          EMAIL_USER: ${{ secrets.EMAIL_USER }}
          EMAIL_PASS: ${{ secrets.EMAIL_PASS }}
          EMAIL_HOST: ${{ secrets.EMAIL_HOST }}
          SESSION_SECRET: ${{ secrets.SESSION_SECRET }}
          ENCRYPTION_SECRET: ${{ secrets.ENCRYPTION_SECRET }}
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          envs: GITHUB_SHA,REGISTRY,IMAGE_NAME,DATABASE_URL,EMAIL_USER,EMAIL_PASS,EMAIL_HOST,SESSION_SECRET,ENCRYPTION_SECRET
          script: |
            cd ~/thebetterhandbook
            echo "Logging into GitHub Container Registry..."
            echo ${{ secrets.GITHUB_TOKEN }} | docker login ${{ env.REGISTRY }} -u ${{ github.actor }} --password-stdin

            echo "Pulling latest image..."
            docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:sha-${{ github.sha }}

            echo "Creating .env file..."
            cat > .env << EOL
            NODE_ENV=production
            DATABASE_URL=${DATABASE_URL}
            EMAIL_USER=${EMAIL_USER}
            EMAIL_PASS=${EMAIL_PASS}
            EMAIL_HOST=${EMAIL_HOST}
            SESSION_SECRET=${SESSION_SECRET}
            ENCRYPTION_SECRET=${ENCRYPTION_SECRET}
            EOL

            echo "Starting application..."
            docker compose down
            docker compose up -d

            echo "Cleaning up old images..."
            docker image prune -f
